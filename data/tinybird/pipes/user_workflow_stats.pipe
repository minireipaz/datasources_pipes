NODE user_workflows

DESCRIPTION >
    This node selects workflows for a specific user
PARAMETERS >
    user_id String
SQL >
    %
    SELECT
        w.id AS workflow_id,
        w.name AS workflow_name,
        w.description AS workflow_description,
        w.status AS workflow_status,
        w.is_active AS workflow_active,
        e.status AS execution_status,
        e.start_time,
        if(e.end_time > e.start_time, dateDiff('second', e.start_time, e.end_time), NULL) AS duration,
        w.directory_to_save
    FROM workflows w
    LEFT JOIN executions e ON w.id = e.workflow_id
    WHERE w.user_id = {{user_id}}

NODE workflow_counts
DESCRIPTION >
    This node counts workflows by status for a specific user
PARAMETERS >
    user_id String
SQL >
    %
    SELECT
        count(DISTINCT w.id) AS total_workflows,
        countIf(e.status = 2) AS successful_workflows, -- completed
        countIf(e.status = 4) AS failed_workflows, -- failed
        countIf(e.status IN (1, 3)) AS pending_workflows -- pending, processing
    FROM workflows w
    LEFT JOIN executions e ON w.id = e.workflow_id
    WHERE w.user_id = {{user_id}}

NODE recent_workflows
DESCRIPTION >
    This node selects the 5 most recent workflows for a specific user
PARAMETERS >
    user_id String
SQL >
    %
    SELECT
        w.id AS id,
        w.name AS workflow_name,
        w.description AS workflow_description,
        w.status AS workflow_status,
        w.is_active AS workflow_active,
        e.start_time,
        if(e.end_time > e.start_time, dateDiff('second', e.start_time, e.end_time), NULL) AS duration,
        w.directory_to_save
    FROM workflows w
    LEFT JOIN executions e ON w.id = e.workflow_id
    WHERE w.user_id = {{user_id}}
      AND e.status IS NOT NULL
    ORDER BY e.start_time DESC
    LIMIT 5

NODE endpoint
DESCRIPTION >
    This node combines all results for a specific user, with recent workflows as an array of arrays
PARAMETERS >
    user_id String
SQL >
    %
    SELECT
        wc.total_workflows,
        wc.successful_workflows,
        wc.failed_workflows,
        wc.pending_workflows,
        groupArray([
            rw.id,
            rw.workflow_name,
            rw.workflow_description,
            toString(rw.workflow_status),
            toString(rw.workflow_active),
            toString(rw.start_time),
            if(rw.duration IS NULL, '', toString(rw.duration)),
            rw.directory_to_save
        ]) AS recent_workflows
    FROM workflow_counts wc
    CROSS JOIN (
        SELECT *
        FROM recent_workflows
        WHERE {{user_id}} = {{user_id}}
    ) AS rw
    WHERE {{user_id}} = {{user_id}}
    GROUP BY
        wc.total_workflows,
        wc.successful_workflows,
        wc.failed_workflows,
        wc.pending_workflows
